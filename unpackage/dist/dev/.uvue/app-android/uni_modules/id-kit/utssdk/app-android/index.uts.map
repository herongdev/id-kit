{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/id-kit/utssdk/app-android/index.uts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,MAAM,cAAc,CAAA;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AAEtD,+BAA+B;AAC/B,MAAM,CAAC,KAAK,UAAU,QAAQ,CAAC,OAAQ,CAAC,EAAE,aAAa,GAAI,OAAO,CAAC,aAAa,CAAC;IAChF,IAAI;QAAE,cAAc,CAAC,wBAAwB,EAAE,CAAA;KAAE;IAAC,eAAM,GAAG;IAC3D,IAAI;QAAE,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;KAAE;IAAC,eAAM,GAAG;IACjD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,aAAa,CAAA;AAC1C,CAAC;AAED,6BAA6B;AAC7B,MAAM,UAAU,OAAO,CAAC,IAAI,EAAG,MAAM,GAAI,IAAI;IAC5C,IAAI;QAAE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;KAAE;IAAC,eAAM,GAAG;AACpD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,SAAS,CAAC,OAAQ,CAAC,EAAE,aAAa,GAAI,OAAO,CAAC,aAAa,CAAC;IACjF,MAAM,MAAM,GAAG,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IAClD,MAAM,SAAS,GAAG,OAAO,EAAE,UAAU,CAAC,WAAW,CAAC,IAAI,KAAK,CAAA;IAC3D,MAAM,IAAI,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,SAAS,CAAC,IAAI,MAAM,CAAA;IAClF,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,aAAa,CAAA;IAC7C,OAAO,GAAG,CAAA;AACX,CAAC","sourcesContent":["import type { IdValue } from \"../types.uts\"\r\nimport { DeviceIdNative } from \"uts.sdk.modules.idKit\"\r\n\r\n// 同意隐私：触发 OAID 预取，并把同意状态交给原生维护\r\nexport async function register(options ?: UTSJSONObject) : Promise<UTSJSONObject> {\r\n\ttry { DeviceIdNative.prefetchOaidAfterConsent() } catch { }\r\n\ttry { DeviceIdNative.setConsent(true) } catch { }\r\n\treturn { consent: true } as UTSJSONObject\r\n}\r\n\r\n// 设置盐：原生统一使用 salt 参与 hash 计算\r\nexport function setSalt(salt : string) : void {\r\n\ttry { DeviceIdNative.setSaltValue(salt) } catch { }\r\n}\r\n\r\nexport async function getBestId(options ?: UTSJSONObject) : Promise<UTSJSONObject> {\r\n\tconst prefer = options?.getArray<string>(\"prefer\")\r\n\tconst exposeRaw = options?.getBoolean(\"exposeRaw\") ?? false\r\n\tconst json = DeviceIdNative.getBestId(prefer?.toTypedArray(), exposeRaw) as string\r\n\tconst obj = JSON.parse(json) as UTSJSONObject\r\n\treturn obj\r\n}"]}