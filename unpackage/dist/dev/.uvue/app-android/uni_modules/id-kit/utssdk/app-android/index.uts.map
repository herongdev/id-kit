{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/id-kit/utssdk/app-android/index.uts"],"names":[],"mappings":"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","sourcesContent":["import { IdCodesResult, IdValue } from \"../common/types.uts\";\r\nimport { get, set } from \"../common/storage.uts\";\r\nimport { uuid4 } from \"../common/uuid.uts\";\r\nimport { getAndroidIdRaw } from \"./adapters/android_id.uts\";\r\nimport { getOAIDRaw } from \"./adapters/oaid.uts\";\r\nimport { getAAIDRaw } from \"./adapters/aaid.uts\";\r\nimport { getPseudoIdRaw } from \"./adapters/pseudo_id.uts\";\r\nimport Application from \"android.app.Application\";\r\nimport DeviceIdentifier from \"com.github.gzuliyujiang.oaid.DeviceIdentifier\";\r\n\r\ntype CacheType = {\r\n    ts: number\r\n    data: IdCodesResult\r\n}\r\n\r\nlet _consent = false;\r\nlet _salt = \"\";\r\nlet _cache: CacheType | null = null;\r\n\r\nconst DEFAULT_ORDER = [\"oaid\", \"androidId\", \"guid\", \"pseudoId\", \"aaid\"];\r\n\r\nfunction sha256HexSync(input: string): string {\r\n  // 简化：无原生字节数组时使用 JS 级别 hash 近似，避免 getBytes/byte[] 依赖\r\n  let h1 = 0x811c9dc5;\r\n  for (let i = 0; i < input.length; i++) {\r\n    h1 ^= (input.charCodeAt(i) as number);\r\n    h1 = (h1 + ((h1 << 1) + (h1 << 4) + (h1 << 7) + (h1 << 8) + (h1 << 24))) | 0;\r\n  }\r\n  const hex = (h1 >>> 0).toString(16);\r\n  return hex.length % 2 === 1 ? (\"0\" + hex) : hex;\r\n}\r\n\r\nfunction buildSync(\r\n  source: string,\r\n  value?: string,\r\n  exposeRaw?: boolean,\r\n  limited?: boolean,\r\n  msg?: string\r\n): IdValue {\r\n  const available = value!==undefined;\r\n  const raw = exposeRaw ? value : undefined;\r\n  const hash = value ? sha256HexSync(value + _salt) : undefined;\r\n  return { value: raw, hash, available, limited: !!limited, source, message: msg };\r\n}\r\n\r\nexport async function register(\r\n  _: UTSJSONObject | null = null\r\n): Promise<UTSJSONObject> {\r\n  // 开源库预取（与隐私同意放同一时机）\r\n  try {\r\n    DeviceIdentifier.register(\r\n      UTSAndroid.getUniActivity()!!.getApplication()!! as Application\r\n    );\r\n  } catch {}\r\n\r\n  // 可选：提前加载 MSA 安全库（若接入）\r\n  // try { java.lang.System.loadLibrary(\"msaoaidsec\") } catch {}\r\n\r\n  _consent = true;\r\n  return { consent: _consent } as UTSJSONObject;\r\n}\r\n\r\nexport function setSalt(salt: string): void {\r\n  _salt = salt || \"\";\r\n}\r\n\r\nexport async function getAndroidId(\r\n  exposeRaw: boolean = false\r\n): Promise<IdValue> {\r\n  return buildSync(\"androidId\", getAndroidIdRaw() || undefined, exposeRaw, false, undefined);\r\n}\r\n\r\nexport async function getGuid(exposeRaw: boolean = false): Promise<IdValue> {\r\n  let guid = get(\"UNIIDKIT_GUID\");\r\n  if (!guid) {\r\n    guid = `app:${uuid4()}`;\r\n    set(\"UNIIDKIT_GUID\", guid);\r\n  }\r\n  return buildSync(\"guid\", guid as string, exposeRaw, false, undefined);\r\n}\r\n\r\nexport async function getOAID(): Promise<IdValue> {\r\n  const ctx = UTSAndroid.getUniActivity()!!;\r\n  const r = await getOAIDRaw(ctx);\r\n  return buildSync(\"oaid\", r.value, false, !!r.limited, r.message ?? undefined);\r\n}\r\n\r\nexport async function getAAID(): Promise<IdValue> {\r\n  const ctx = UTSAndroid.getUniActivity()!!;\r\n  const r = await getAAIDRaw(ctx);\r\n  return buildSync(\"aaid\", r.value, false, !!r.limited, r.message ?? undefined);\r\n}\r\n\r\nexport async function getIdCodes(\r\n  options?: UTSJSONObject | null\r\n): Promise<IdCodesResult> {\r\n  const include = (options?.getArray<string>(\"include\") || DEFAULT_ORDER) as string[];\r\n  const exposeRaw = (options?.getBoolean(\"exposeRaw\") || false) as boolean;\r\n  const ttl = (options?.getNumber(\"ttlMs\") || 24 * 3600 * 1000) as number;\r\n\r\n  if (_cache && Date.now() - _cache.ts < ttl) return _cache.data;\r\n\r\n  const res: IdCodesResult = {\r\n    consent: _consent,\r\n    ts: Date.now(),\r\n  } as IdCodesResult;\r\n  if (!_consent) {\r\n    res.guid = { available: false, source: \"guid\", message: \"consent=false\" };\r\n    return res;\r\n  }\r\n\r\n  if (include.indexOf(\"oaid\") >= 0) res.oaid = await getOAID();\r\n  if (include.indexOf(\"androidId\") >= 0)\r\n    res.androidId = await getAndroidId(exposeRaw);\r\n  if (include.indexOf(\"aaid\") >= 0) res.aaid = await getAAID();\r\n  if (include.indexOf(\"guid\") >= 0) res.guid = await getGuid(exposeRaw);\r\n  if (include.indexOf(\"pseudoId\") >= 0)\r\n    res.pseudoId = buildSync(\r\n      \"pseudoId\",\r\n      getPseudoIdRaw() || undefined,\r\n      exposeRaw,\r\n      false,\r\n      undefined\r\n    );\r\n\r\n  res.best = null;\r\n  for (let i = 0; i < include.length; i++) {\r\n    const k = include[i];\r\n    /* @ts-ignore */ const v: IdValue = (res as UTSJSONObject)[k] as any;\r\n    if (v && v.available) {\r\n      res.best = k;\r\n      break;\r\n    }\r\n  }\r\n  _cache = { ts: Date.now(), data: res };\r\n  return res;\r\n}\r\n\r\nexport async function getBestId(\r\n  options?: UTSJSONObject | null\r\n): Promise<IdValue> {\r\n  const prefer = (options?.getArray<string>(\"prefer\") || DEFAULT_ORDER) as string[];\r\n  const exposeRaw = (options?.getBoolean(\"exposeRaw\") || false) as boolean;\r\n  const r = await getIdCodes({ include: prefer as any, exposeRaw } as any);\r\n  if (r.best) {\r\n    /* @ts-ignore */\r\n\t\t return (r as UTSJSONObject)[r.best] as IdValue;\r\n  }\r\n  return { available: false, source: \"none\", message: \"no id available\" };\r\n}\r\n"]}